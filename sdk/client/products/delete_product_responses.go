// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteProductReader is a Reader for the DeleteProduct structure.
type DeleteProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteProductNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteProductNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteProductNoContent creates a DeleteProductNoContent with default headers values
func NewDeleteProductNoContent() *DeleteProductNoContent {
	return &DeleteProductNoContent{}
}

/*
DeleteProductNoContent describes a response with status code 204, with default header values.

Empty response has no data.
*/
type DeleteProductNoContent struct {
}

// IsSuccess returns true when this delete product no content response has a 2xx status code
func (o *DeleteProductNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete product no content response has a 3xx status code
func (o *DeleteProductNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product no content response has a 4xx status code
func (o *DeleteProductNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete product no content response has a 5xx status code
func (o *DeleteProductNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product no content response a status code equal to that given
func (o *DeleteProductNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteProductNoContent) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNoContent ", 204)
}

func (o *DeleteProductNoContent) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNoContent ", 204)
}

func (o *DeleteProductNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductNotFound creates a DeleteProductNotFound with default headers values
func NewDeleteProductNotFound() *DeleteProductNotFound {
	return &DeleteProductNotFound{}
}

/*
DeleteProductNotFound describes a response with status code 404, with default header values.

DeleteProductNotFound delete product not found
*/
type DeleteProductNotFound struct {
}

// IsSuccess returns true when this delete product not found response has a 2xx status code
func (o *DeleteProductNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product not found response has a 3xx status code
func (o *DeleteProductNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product not found response has a 4xx status code
func (o *DeleteProductNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete product not found response has a 5xx status code
func (o *DeleteProductNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product not found response a status code equal to that given
func (o *DeleteProductNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteProductNotFound) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotFound ", 404)
}

func (o *DeleteProductNotFound) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotFound ", 404)
}

func (o *DeleteProductNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
