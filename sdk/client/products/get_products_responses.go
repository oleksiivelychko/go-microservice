// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetProductsReader is a Reader for the GetProducts structure.
type GetProductsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProductsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProductsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProductsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProductsOK creates a GetProductsOK with default headers values
func NewGetProductsOK() *GetProductsOK {
	return &GetProductsOK{}
}

/*
GetProductsOK describes a response with status code 200, with default header values.

Data structure representing a list of product.
*/
type GetProductsOK struct {
	Payload []interface{}
}

// IsSuccess returns true when this get products o k response has a 2xx status code
func (o *GetProductsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get products o k response has a 3xx status code
func (o *GetProductsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get products o k response has a 4xx status code
func (o *GetProductsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get products o k response has a 5xx status code
func (o *GetProductsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get products o k response a status code equal to that given
func (o *GetProductsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetProductsOK) Error() string {
	return fmt.Sprintf("[GET /products][%d] getProductsOK  %+v", 200, o.Payload)
}

func (o *GetProductsOK) String() string {
	return fmt.Sprintf("[GET /products][%d] getProductsOK  %+v", 200, o.Payload)
}

func (o *GetProductsOK) GetPayload() []interface{} {
	return o.Payload
}

func (o *GetProductsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProductsBadRequest creates a GetProductsBadRequest with default headers values
func NewGetProductsBadRequest() *GetProductsBadRequest {
	return &GetProductsBadRequest{}
}

/*
GetProductsBadRequest describes a response with status code 400, with default header values.

gRPC service request error message.
*/
type GetProductsBadRequest struct {
}

// IsSuccess returns true when this get products bad request response has a 2xx status code
func (o *GetProductsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get products bad request response has a 3xx status code
func (o *GetProductsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get products bad request response has a 4xx status code
func (o *GetProductsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get products bad request response has a 5xx status code
func (o *GetProductsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get products bad request response a status code equal to that given
func (o *GetProductsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetProductsBadRequest) Error() string {
	return fmt.Sprintf("[GET /products][%d] getProductsBadRequest ", 400)
}

func (o *GetProductsBadRequest) String() string {
	return fmt.Sprintf("[GET /products][%d] getProductsBadRequest ", 400)
}

func (o *GetProductsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
