// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateProductReader is a Reader for the UpdateProduct structure.
type UpdateProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateProductOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateProductBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateProductNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateProductUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateProductOK creates a UpdateProductOK with default headers values
func NewUpdateProductOK() *UpdateProductOK {
	return &UpdateProductOK{}
}

/*
UpdateProductOK describes a response with status code 200, with default header values.

Data structure representing a single product.
*/
type UpdateProductOK struct {
}

// IsSuccess returns true when this update product o k response has a 2xx status code
func (o *UpdateProductOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update product o k response has a 3xx status code
func (o *UpdateProductOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update product o k response has a 4xx status code
func (o *UpdateProductOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update product o k response has a 5xx status code
func (o *UpdateProductOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update product o k response a status code equal to that given
func (o *UpdateProductOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateProductOK) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductOK ", 200)
}

func (o *UpdateProductOK) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductOK ", 200)
}

func (o *UpdateProductOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProductBadRequest creates a UpdateProductBadRequest with default headers values
func NewUpdateProductBadRequest() *UpdateProductBadRequest {
	return &UpdateProductBadRequest{}
}

/*
UpdateProductBadRequest describes a response with status code 400, with default header values.

gRPC service request error message.
*/
type UpdateProductBadRequest struct {
}

// IsSuccess returns true when this update product bad request response has a 2xx status code
func (o *UpdateProductBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update product bad request response has a 3xx status code
func (o *UpdateProductBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update product bad request response has a 4xx status code
func (o *UpdateProductBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update product bad request response has a 5xx status code
func (o *UpdateProductBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update product bad request response a status code equal to that given
func (o *UpdateProductBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateProductBadRequest) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductBadRequest ", 400)
}

func (o *UpdateProductBadRequest) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductBadRequest ", 400)
}

func (o *UpdateProductBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProductNotFound creates a UpdateProductNotFound with default headers values
func NewUpdateProductNotFound() *UpdateProductNotFound {
	return &UpdateProductNotFound{}
}

/*
UpdateProductNotFound describes a response with status code 404, with default header values.

Generic error message returned as a string.
*/
type UpdateProductNotFound struct {
}

// IsSuccess returns true when this update product not found response has a 2xx status code
func (o *UpdateProductNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update product not found response has a 3xx status code
func (o *UpdateProductNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update product not found response has a 4xx status code
func (o *UpdateProductNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update product not found response has a 5xx status code
func (o *UpdateProductNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update product not found response a status code equal to that given
func (o *UpdateProductNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateProductNotFound) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductNotFound ", 404)
}

func (o *UpdateProductNotFound) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductNotFound ", 404)
}

func (o *UpdateProductNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProductUnprocessableEntity creates a UpdateProductUnprocessableEntity with default headers values
func NewUpdateProductUnprocessableEntity() *UpdateProductUnprocessableEntity {
	return &UpdateProductUnprocessableEntity{}
}

/*
UpdateProductUnprocessableEntity describes a response with status code 422, with default header values.

Validation errors defined as an array of strings.
*/
type UpdateProductUnprocessableEntity struct {
}

// IsSuccess returns true when this update product unprocessable entity response has a 2xx status code
func (o *UpdateProductUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update product unprocessable entity response has a 3xx status code
func (o *UpdateProductUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update product unprocessable entity response has a 4xx status code
func (o *UpdateProductUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update product unprocessable entity response has a 5xx status code
func (o *UpdateProductUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update product unprocessable entity response a status code equal to that given
func (o *UpdateProductUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *UpdateProductUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductUnprocessableEntity ", 422)
}

func (o *UpdateProductUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] updateProductUnprocessableEntity ", 422)
}

func (o *UpdateProductUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
