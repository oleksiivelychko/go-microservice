basePath: /
consumes:
    - application/json
definitions:
    product:
        title: Product structure for an API model.
        x-go-name: Product
        x-go-package: github.com/oleksiivelychko/go-microservice/api
host: localhost
info:
    description: |-
        Schemes:
        http
        https
    title: Documentation of microservice API
    version: 1.0.0
paths:
    /products:
        get:
            operationId: getProducts
            parameters:
                - in: query
                  name: Currency
                  type: string
            responses:
                "200":
                    $ref: '#/responses/productsResponse'
                "400":
                    $ref: '#/responses/grpcResponseWrapper'
            summary: Returns a list of products.
            tags:
                - products
        post:
            operationId: createProduct
            parameters:
                - in: body
                  name: Body
                  required: true
                  schema: {}
            responses:
                "201":
                    $ref: '#/responses/productResponse'
                "400":
                    $ref: '#/responses/grpcResponseWrapper'
                "422":
                    $ref: '#/responses/validationErrorsResponse'
            summary: Create a new product.
            tags:
                - products
    /products/{id}:
        delete:
            operationId: deleteProduct
            parameters:
                - format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "204":
                    $ref: '#/responses/noContentResponse'
                "404":
                    $ref: '#/responses/notFoundResponse'
            summary: Delete a product.
            tags:
                - products
        get:
            operationId: getProduct
            parameters:
                - format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
                - in: query
                  name: Currency
                  type: string
            responses:
                "200":
                    $ref: '#/responses/productResponse'
                "400":
                    $ref: '#/responses/grpcResponseWrapper'
                "404":
                    $ref: '#/responses/notFoundResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Returns a single product.
            tags:
                - products
        put:
            operationId: updateProduct
            parameters:
                - format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
                - in: body
                  name: Body
                  required: true
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/productResponse'
                "400":
                    $ref: '#/responses/grpcResponseWrapper'
                "404":
                    $ref: '#/responses/errorResponse'
                "422":
                    $ref: '#/responses/validationErrorsResponse'
            summary: Update a product details.
            tags:
                - products
produces:
    - application/json
responses:
    errorResponse:
        description: Generic error message returned as a string.
    grpcResponseWrapper:
        description: gRPC service request error message.
    noContentResponse:
        description: Empty response has no data.
    notFoundResponse:
        description: ""
    productResponse:
        description: Data structure representing a single product.
    productsResponse:
        description: Data structure representing a list of product.
        schema:
            items: {}
            type: array
    validationErrorsResponse:
        description: Validation errors defined as an array of strings.
swagger: "2.0"
