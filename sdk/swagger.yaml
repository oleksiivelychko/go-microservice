basePath: /
consumes:
    - application/json
definitions:
    GRPCServiceError:
        properties:
            message:
                type: string
                x-go-name: Message
        type: object
        x-go-package: github.com/oleksiivelychko/go-microservice/errors
    GenericError:
        properties:
            message:
                type: string
                x-go-name: Message
        title: GenericError is a generic error message returned by a server.
        type: object
        x-go-package: github.com/oleksiivelychko/go-microservice/errors
    ProductNotFoundError:
        properties:
            id:
                format: int64
                type: integer
                x-go-name: ID
        type: object
        x-go-package: github.com/oleksiivelychko/go-microservice/errors
    ValidationErrors:
        properties:
            messages:
                items:
                    type: string
                type: array
                x-go-name: Messages
        title: ValidationErrors is a collection of validation error messages.
        type: object
        x-go-package: github.com/oleksiivelychko/go-microservice/errors
    product:
        properties:
            id:
                format: int64
                minimum: 1
                type: integer
                x-go-name: ID
            name:
                maxLength: 255
                type: string
                x-go-name: Name
            price:
                format: double
                minimum: 0.01
                type: number
                x-go-name: Price
            sku:
                description: |-
                    SKU - in the field of inventory management, a stock keeping unit is a distinct type of item for sale, purchased, or tracked in inventory,
                    such as a product or service, and all attributes associated with the item type that distinguish it from other item types.
                    For a product, these attributes can include manufacturer, description, material, size, color, packaging, and warranty terms.
                    When a business takes inventory of its stock, it counts the quantity it has of each SKU.
                    SKU can also refer to a unique identifier or code, sometimes represented via a barcode for scanning and tracking, that refers to the particular stock keeping unit.
                    These identifiers are not regulated or standardized.
                    When a company receives items from a vendor, it has a choice of maintaining the vendor's SKU or creating its own.

                    Original source: https://en.wikipedia.org/wiki/Stock_keeping_unit
                pattern: '[a-z]+-[a-z]+-[a-z]+'
                type: string
                x-go-name: SKU
            updatedAt:
                type: string
                x-go-name: UpdatedAt
        required:
            - name
            - price
            - sku
        title: Product structure for an API model.
        type: object
        x-go-name: Product
        x-go-package: github.com/oleksiivelychko/go-microservice/api
host: localhost
info:
    description: |-
        Schemes:
        http
    title: Documentation of microservice API
    version: 1.0.0
paths:
    /products:
        get:
            operationId: getProducts
            parameters:
                - in: query
                  name: Currency
                  type: string
            responses:
                "200":
                    $ref: '#/responses/productsResponse'
                "400":
                    $ref: '#/responses/grpcErrorResponse'
            summary: Returns a list of products.
            tags:
                - products
        post:
            operationId: createProduct
            parameters:
                - in: body
                  name: Body
                  required: true
                  schema:
                    $ref: '#/definitions/product'
            responses:
                "201":
                    $ref: '#/responses/productResponse'
                "400":
                    $ref: '#/responses/grpcErrorResponse'
                "422":
                    $ref: '#/responses/validationErrorsResponse'
            summary: Create a new product.
            tags:
                - products
    /products/{id}:
        delete:
            operationId: deleteProduct
            parameters:
                - format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "204":
                    $ref: '#/responses/noContentResponse'
                "404":
                    $ref: '#/responses/notFoundResponse'
            summary: Delete a product.
            tags:
                - products
        get:
            operationId: getProduct
            parameters:
                - format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
                - in: query
                  name: Currency
                  type: string
            responses:
                "200":
                    $ref: '#/responses/productResponse'
                "400":
                    $ref: '#/responses/grpcErrorResponse'
                "404":
                    $ref: '#/responses/notFoundResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Returns a single product.
            tags:
                - products
        put:
            operationId: updateProduct
            parameters:
                - format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
                - in: body
                  name: Body
                  required: true
                  schema:
                    $ref: '#/definitions/product'
            responses:
                "200":
                    $ref: '#/responses/productResponse'
                "400":
                    $ref: '#/responses/grpcErrorResponse'
                "404":
                    $ref: '#/responses/errorResponse'
                "422":
                    $ref: '#/responses/validationErrorsResponse'
            summary: Update a product details.
            tags:
                - products
produces:
    - application/json
responses:
    errorResponse:
        description: ""
        schema:
            $ref: '#/definitions/GenericError'
    grpcErrorResponse:
        description: ""
        schema:
            $ref: '#/definitions/GRPCServiceError'
    noContentResponse:
        description: Empty response has no data.
    notFoundResponse:
        description: ""
        schema:
            $ref: '#/definitions/ProductNotFoundError'
    productResponse:
        description: Data structure is representing a single product.
        schema:
            $ref: '#/definitions/product'
    productsResponse:
        description: Data structure is representing a list of products.
        schema:
            items:
                $ref: '#/definitions/product'
            type: array
    validationErrorsResponse:
        description: Validation errors are an array of strings.
        schema:
            $ref: '#/definitions/ValidationErrors'
swagger: "2.0"
