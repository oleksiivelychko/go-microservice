basePath: /
consumes:
- application/json
definitions:
  GenericError:
    description: GenericError GenericError GenericError GenericError GenericError
      is a generic error message returned by a server
    properties:
      message:
        description: message
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/oleksiivelychko/go-microservice/sdk/models
  Product:
    description: Product Product defines the structure for an API product
    properties:
      description:
        description: description
        maxLength: 10000
        type: string
        x-go-name: Description
      id:
        description: unique identifier
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: name
        maxLength: 255
        type: string
        x-go-name: Name
      price:
        description: price
        format: float
        minimum: 0.01
        type: number
        x-go-name: Price
      sku:
        description: |-
          SKU - in the field of inventory management, a stock keeping unit is a distinct type of item for sale, purchased, or tracked in inventory,
          such as a product or service, and all attributes associated with the item type that distinguish it from other item types.
          For a product, these attributes can include manufacturer, description, material, size, color, packaging, and warranty terms.
          When a business takes inventory of its stock, it counts the quantity it has of each SKU.
          SKU can also refer to a unique identifier or code, sometimes represented via a barcode for scanning and tracking, that refers to the particular stock keeping unit.
          These identifiers are not regulated or standardized.
          When a company receives items from a vendor, it has a choice of maintaining the vendor's SKU or creating its own.

          Original source: https://en.wikipedia.org/wiki/Stock_keeping_unit
        pattern: '[a-z]+-[a-z]+-[a-z]+'
        type: string
        x-go-name: SKU
    required:
    - name
    - price
    - sku
    type: object
    x-go-package: github.com/oleksiivelychko/go-microservice/sdk/models
  ValidationError:
    description: ValidationError ValidationError ValidationError ValidationError ValidationError
      is a collection of validation error messages
    properties:
      messages:
        description: messages
        items:
          type: string
        type: array
        x-go-name: Messages
    type: object
    x-go-package: github.com/oleksiivelychko/go-microservice/sdk/models
  product:
    description: Product defines the structure for an API product
    properties:
      description:
        description: description
        maxLength: 10000
        type: string
        x-go-name: Description
      id:
        description: unique identifier
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: name
        maxLength: 255
        type: string
        x-go-name: Name
      price:
        description: price
        format: float
        minimum: 0.01
        type: number
        x-go-name: Price
      sku:
        description: |-
          SKU - in the field of inventory management, a stock keeping unit is a distinct type of item for sale, purchased, or tracked in inventory,
          such as a product or service, and all attributes associated with the item type that distinguish it from other item types.
          For a product, these attributes can include manufacturer, description, material, size, color, packaging, and warranty terms.
          When a business takes inventory of its stock, it counts the quantity it has of each SKU.
          SKU can also refer to a unique identifier or code, sometimes represented via a barcode for scanning and tracking, that refers to the particular stock keeping unit.
          These identifiers are not regulated or standardized.
          When a company receives items from a vendor, it has a choice of maintaining the vendor's SKU or creating its own.

          Original source: https://en.wikipedia.org/wiki/Stock_keeping_unit
        pattern: '[a-z]+-[a-z]+-[a-z]+'
        type: string
        x-go-name: SKU
    required:
    - name
    - price
    - sku
    type: object
    x-go-name: Product
    x-go-package: github.com/oleksiivelychko/go-microservice/api
host: localhost
info:
  description: |-
    Schemes:
    http
    https
  title: Documentation of microservice API
  version: 1.0.0
paths:
  /products:
    get:
      description: Returns a list of products
      operationId: getProducts
      responses:
        "200":
          $ref: '#/responses/productsResponse'
      tags:
      - products
    post:
      description: Create a new product
      operationId: createProduct
      parameters:
      - description: |-
          Product data structure to Update or Create.
          Note: the id field is ignored by update and create operations
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/product'
      responses:
        "200":
          $ref: '#/responses/productResponse'
        "422":
          $ref: '#/responses/errorValidation'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - products
    put:
      description: Update a products details
      operationId: updateProduct
      parameters:
      - description: |-
          Product data structure to Update or Create.
          Note: the id field is ignored by update and create operations
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/product'
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorValidation'
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete a product
      operationId: deleteProduct
      parameters:
      - description: The id of the product for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - products
    get:
      description: Returns a single product by ID
      operationId: getProduct
      parameters:
      - description: The id of the product for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/productResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - products
produces:
- application/json
responses:
  errorResponse:
    description: Generic error message returned as a string.
    schema:
      $ref: '#/definitions/GenericError'
  errorValidation:
    description: Validation errors defined as an array of strings.
    schema:
      $ref: '#/definitions/ValidationError'
  noContentResponse:
    description: No content is returned by this API endpoint
  productResponse:
    description: Data structure representing a single product
    schema:
      $ref: '#/definitions/product'
  productsResponse:
    description: Data structure representing a list of product
    schema:
      items:
        $ref: '#/definitions/product'
      type: array
swagger: "2.0"
